package main //Задача. Определить сумму покупки.
// Решение через карты и структуры.
//прикрутить добавление или удаление товара.
//убрать, что можно, в функции.
//Сделать, чтобы при выборе товар исчезал из списка.
//Как узнать размер map? --> len(priceList) <--
//Предусмотреть ошибочный ввод номера товара  --> elem, ok = m[key] <--
// Группы товаров..

import (
	"fmt"
)

type Goods struct {
	title string
	price float64
}

var (
	priceList = map[int]Goods{
		1: {"Огурцы", 77.50}, 2: {"Помидоры", 180}, 3: {"Яблоки", 95.70}, 4: {"Лимоны", 233}, 5: {"Апельсины", 99.99},
		6: {"Бананы", 67}, 7: {"Мандарины", 117}, 8: {"Груши", 200}, 9: {"Курица", 235.70}, 10: {"Сыр", 473.85},
		11: {"Укроп", 23}, 12: {"Петрушка", 18}, 13: {"Масло", 178.40}, 14: {"Молоко", 67}, 15: {"Сахар", 54},
		16: {"Чай", 80}, 17: {"Виноград", 145},
	}
	weight, sum float64
	j           int = 20
)

func main() {
	fmt.Println("Всегда в наличии ", len(priceList), "наименований товара: ")
	for i := 1; i < 18; i++ {
		fmt.Println(i, "--", priceList[i])
	}
	for j != 0 {
		fmt.Print("Введите номер товара или 0 для завершения покупок: ")
		fmt.Scanln(&j)
		if j != 0 && j <= len(priceList) {
			p := priceList[j]
			fmt.Print("Вы выбрали ", p.title, " Введите необходимый вес или количество: ")
			fmt.Scanln(&weight)
			sum = sum + weight*p.price
		} else if j > len(priceList) {
			fmt.Println("Введен неверный номер товара! Попробуйте снова")
		}
	}
	fmt.Println("Всего покупок на ", sum, "руб.")
}
